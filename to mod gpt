-- Configuración inicial y variables
local runService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local localPlayer = game.Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()

local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TitleLabel = Instance.new("TextLabel")
local ToggleButton = Instance.new("TextButton")
local CombatButton = Instance.new("TextButton")
local TeleportButton = Instance.new("TextButton")
local HashirasButton = Instance.new("TextButton")
local ExtraButton = Instance.new("TextButton")
local DupeButton = Instance.new("TextButton")
local SubMenuFrame = Instance.new("Frame")
local DupeMenu = Instance.new("Frame")

local godmodeEnabled = false
local teleportListVisible = false
local uiMinimized = false
local autoBreathingEnabled = false
local autoGourdEnabled = false
local getDropEnabled = false
local antiLagEnabled = false
local noCrowEnabled = false
local antiSunEnabled = false
local autoFarmEnabled = false
local autoTrinketEnabled = false

local selectedNPCFunc = nil
local currentAutoFarmTarget = nil -- Nuevo: guarda el nombre del objetivo seleccionado

-- Configuración de guardado
local ConfigName = "DemonFall.json"
local ConfigFolder = "Tekkit Hub"
local Settings = {}

-- Verificar si la función makefolder existe y si la carpeta existe
if makefolder and not isfolder(ConfigFolder) then
    makefolder(ConfigFolder)
end

-- Leer o crear archivo de configuración con verificación adicional
local function loadSettings()
    local success, result = pcall(function()
        return readfile(ConfigFolder .. "//" .. ConfigName)
    end)

    if success then
        Settings = game:GetService("HttpService"):JSONDecode(result)
    else
        warn("No se pudo leer el archivo de configuración: " .. result)
        Settings = {
            godmodeEnabled = false,
            autoBreathingEnabled = false,
            autoGourdEnabled = false,
            getDropEnabled = false,
            antiLagEnabled = false,
            noCrowEnabled = false,
            antiSunEnabled = false,
            autoFarmEnabled = false,
            autoTrinketEnabled = false
        }
        writefile(ConfigFolder .. "//" .. ConfigName, game:GetService("HttpService"):JSONEncode(Settings))
    end

    -- Cargar las configuraciones guardadas en variables
    godmodeEnabled = Settings.godmodeEnabled or false
    autoBreathingEnabled = Settings.autoBreathingEnabled or false
    autoGourdEnabled = Settings.autoGourdEnabled or false
    getDropEnabled = Settings.getDropEnabled or false
    antiLagEnabled = Settings.antiLagEnabled or false
    noCrowEnabled = Settings.noCrowEnabled or false
    antiSunEnabled = Settings.antiSunEnabled or false
    autoFarmEnabled = Settings.autoFarmEnabled or false
    autoTrinketEnabled = Settings.autoTrinketEnabled or false
end

-- Función para guardar configuraciones con verificación adicional
local function saveSettings()
    Settings.godmodeEnabled = godmodeEnabled
    Settings.autoBreathingEnabled = autoBreathingEnabled
    Settings.autoGourdEnabled = autoGourdEnabled
    Settings.getDropEnabled = getDropEnabled
    Settings.antiLagEnabled = antiLagEnabled
    Settings.noCrowEnabled = noCrowEnabled
    Settings.antiSunEnabled = antiSunEnabled
    Settings.autoFarmEnabled = autoFarmEnabled
    Settings.autoTrinketEnabled = autoTrinketEnabled

    local success, errorMsg = pcall(function()
        writefile(ConfigFolder .. "//" .. ConfigName, game:GetService("HttpService"):JSONEncode(Settings))
    end)

    if not success then
        warn("No se pudo guardar la configuración: " .. errorMsg)
    end
end

-- Función de movimiento usando TweenService
local function TweenMovement(destination, speed)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart", 10)  -- Espera 10 segundos por HumanoidRootPart

    if rootPart then
        local tweenInfo = TweenInfo.new((rootPart.Position - destination).Magnitude / speed, Enum.EasingStyle.Linear)
        local tween = TweenService:Create(rootPart, tweenInfo, {CFrame = CFrame.new(destination)})
        tween:Play()
        tween.Completed:Wait()
    else
        warn("HumanoidRootPart no encontrado en el modelo del jugador.")
    end
end

-- Función para activar/desactivar Godmode
local function toggleGodmode(state)
    godmodeEnabled = state
    saveSettings()
    if godmodeEnabled then
        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "FallDamageServer", math.acos(50))
    else
        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "FallDamageServer", 0)
    end
end

-- Función para activar/desactivar Auto Breathing
local function toggleAutoBreathing(state)
    autoBreathingEnabled = state
    saveSettings()
    if autoBreathingEnabled then
        spawn(function()
            while autoBreathingEnabled and wait() do
                pcall(function()
                    if game:GetService("Players").LocalPlayer.Breathing.Value < 100 then
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, "G", true, game)
                        wait(2)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, "G", false, game)
                        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
                    end
                end)
            end
        end)
    end
end

-- Función para activar/desactivar Anti Lag
local function toggleAntiLag(state)
    antiLagEnabled = state
    saveSettings()
    if antiLagEnabled then
        for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
            if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
                v.Material = Enum.Material.SmoothPlastic
                if v:IsA("Texture") then
                    v:Destroy()
                end
            end
        end
    end
end

-- Función para activar/desactivar No Crow
local function toggleNoCrow(state)
    noCrowEnabled = state
    saveSettings()
    if noCrowEnabled then
        local crow = game.Players.LocalPlayer.Character:FindFirstChild("Crow")
        if crow then
            crow:Destroy()
        end
    end
end

-- Función para activar/desactivar Get Drop
local function toggleGetDrop(state)
    getDropEnabled = state
    saveSettings()
    if getDropEnabled then
        spawn(function()
            while getDropEnabled do
                wait(0.1)
                local drop = getNearestDrop()
                if drop then
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = drop.CFrame
                    wait(0.1)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                    wait(0.1)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
                end
            end
        end)
    end
end

local function pickupDrop()
    while getDropEnabled do
        wait(0.1)
        local drop = getNearestDrop()
        if drop then
            game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
            wait(0.1)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
        end
    end
end

-- Función para activar/desactivar Auto Gourd
local function toggleAutoGourd(state)
    autoGourdEnabled = state
    saveSettings()
    if autoGourdEnabled then
        game:GetService("Players").LocalPlayer.PlayerGui.Interface.HUD.Clay.Back.TextLabel:GetPropertyChangedSignal("Text"):Connect(function()
            if autoGourdEnabled then
                local Text = tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Interface.HUD.Clay.Back.TextLabel.Text:match("%d+"))
                if Text < 50 then
                    mouse1press()
                elseif Text > 70 then
                    mouse1release()
                end
            end
        end)
    end
end

-- Función para obtener el NPC más cercano
local function getNearestNPC(npcName)
    local closestDistance = math.huge
    local closestNPC = nil

    for _, npc in pairs(workspace:GetChildren()) do
        if npc.Name == npcName and npc:FindFirstChild("HumanoidRootPart") then
            local distance = (npc.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestNPC = npc
            end
        end
    end

    return closestNPC
end

-- Funciones para obtener los diferentes NPCs
local function getNearestDemon()
    return getNearestNPC("GenericOni")
end

local function getNearestFrostyDemon()
    return getNearestNPC("FrostyOni")
end

local function getNearestGreenDemon()
    return getNearestNPC("GreenDemon")
end

local function getNearestBlueDemon()
    return getNearestNPC("BlueDemon")
end

local function getNearestSlayer()
    return getNearestNPC("GenericSlayer")
end

-- Función para AutoFarm de NPCs usando TweenService
local function autoFarmNPCs(targetFunc)
    while autoFarmEnabled do
        wait()
        local target = targetFunc()
        if target and target:FindFirstChild("HumanoidRootPart") and target.Humanoid.Health > 0 then
            -- Equipar Katana
            game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Katana", "Server")
            game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Katana", "EquippedEvents", true, true)

            -- Teletransportarse al objetivo
            localPlayer.Character:SetPrimaryPartCFrame(CFrame.new(target.HumanoidRootPart.Position))

            -- Seguir al objetivo usando TweenService
            while target and target.Humanoid.Health > 0 and autoFarmEnabled do
                TweenMovement(target.HumanoidRootPart.Position, 50)
                wait(0.5)  -- Espera un poco antes de seguir de nuevo

                -- Ataque
                game:GetService("ReplicatedStorage").Remotes.Sync:InvokeServer("Character", "Execute")
                game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Katana", "Server")
            end
        end
    end
end

-- Función para Toggle AutoFarm
local function toggleAutoFarm(state)
    autoFarmEnabled = state
    saveSettings()
    if autoFarmEnabled and selectedNPCFunc then
        autoFarmNPCs(selectedNPCFunc)
    end
end

-- Función para Farm Trinkets
local function farmTrinkets()
    _G.autoPickup = true
    coroutine.wrap(function()
        while _G.autoPickup and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") do wait()
            for i,v in pairs(workspace:GetChildren()) do
                if v.Name == "DropItem" and (v.Position - lp.Character.HumanoidRootPart.Position).magnitude <= 6.2 then
                    game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Interaction", v)
                end
            end
        end
    end)()
end

local function toggleFarmTrinkets(state)
    autoTrinketEnabled = state
    saveSettings()
    if autoTrinketEnabled then
        farmTrinkets()
    end
end

-- Función para AntiSun
local function toggleAntiSun(state)
    antiSunEnabled = state
    saveSettings()
    if antiSunEnabled then
        local OldNamecall
        OldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
            local args = {...}
            if getnamecallmethod() == "FireServer" and args[2] == "DemonWeakness" then
                return wait(math.huge)
            end
            return OldNamecall(self, ...)
        end)
    end
end

-- Función para Rejoin
local function rejoinGame()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end

-- Función para ServerHop
local function serverHop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    local File = pcall(function()
        AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
    end)
    if not File then
        table.insert(AllIDs, actualHour)
        writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
    end

    local function TPReturner()
        local Site
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0
        for _, v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _, Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(4)
                end
            end
        end
    end

    function Teleport()
        while wait() do
            pcall(function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end)
        end
    end

    Teleport()
end

-- Función para abrir/cerrar submenús
local function toggleSubMenu(subMenuFrame)
    if uiMinimized then
        subMenuFrame.Visible = false
    else
        subMenuFrame.Visible = not subMenuFrame.Visible
    end
end

-- Configuración de ScreenGui
ScreenGui.Name = "DariDemonFallHubGui"
ScreenGui.Parent = game.CoreGui

-- Configuración de MainFrame
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(23, 21, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
MainFrame.Size = UDim2.new(0, 400, 0, 200)
MainFrame.Active = true
MainFrame.Draggable = true

-- Configuración del Título
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = MainFrame
TitleLabel.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
TitleLabel.Size = UDim2.new(1, 0, 0, 50)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "Dari Demon Fall Hub - by Dari-04"
TitleLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
TitleLabel.TextSize = 20

-- Configuración de SubMenuFrame
SubMenuFrame.Name = "SubMenuFrame"
SubMenuFrame.Parent = MainFrame
SubMenuFrame.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
SubMenuFrame.Size = UDim2.new(0, 200, 0, 400)
SubMenuFrame.Position = UDim2.new(1, 10, 0, 0)
SubMenuFrame.Visible = false

-- Botón de combate
CombatButton.Name = "CombatButton"
CombatButton.Parent = MainFrame
CombatButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
CombatButton.Size = UDim2.new(0, 180, 0, 30)
CombatButton.Position = UDim2.new(0, 10, 0, 60)
CombatButton.Font = Enum.Font.GothamBold
CombatButton.Text = "Combat"
CombatButton.TextColor3 = Color3.fromRGB(0, 170, 255)
CombatButton.TextSize = 16

CombatButton.MouseButton1Click:Connect(function()
    toggleSubMenu(SubMenuFrame)
    if SubMenuFrame.Visible then
        SubMenuFrame:ClearAllChildren()

        -- Opciones de combate
        local GodmodeToggle = Instance.new("TextButton")
        GodmodeToggle.Name = "GodmodeToggle"
        GodmodeToggle.Parent = SubMenuFrame
        GodmodeToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        GodmodeToggle.Size = UDim2.new(1, -20, 0, 30)
        GodmodeToggle.Font = Enum.Font.GothamBold
        GodmodeToggle.Text = godmodeEnabled and "Toggle Godmode: ON" or "Toggle Godmode: OFF"
        GodmodeToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        GodmodeToggle.TextSize = 16
        GodmodeToggle.Position = UDim2.new(0, 10, 0, 10)

        GodmodeToggle.MouseButton1Click:Connect(function()
            toggleGodmode(not godmodeEnabled)
            GodmodeToggle.Text = godmodeEnabled and "Toggle Godmode: ON" or "Toggle Godmode: OFF"
        end)

        local AutoBreathingToggle = Instance.new("TextButton")
        AutoBreathingToggle.Name = "AutoBreathingToggle"
        AutoBreathingToggle.Parent = SubMenuFrame
        AutoBreathingToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        AutoBreathingToggle.Size = UDim2.new(1, -20, 0, 30)
        AutoBreathingToggle.Font = Enum.Font.GothamBold
        AutoBreathingToggle.Text = autoBreathingEnabled and "Auto Breathing: ON" or "Auto Breathing: OFF"
        AutoBreathingToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        AutoBreathingToggle.TextSize = 16
        AutoBreathingToggle.Position = UDim2.new(0, 10, 0, 50)

        AutoBreathingToggle.MouseButton1Click:Connect(function()
            toggleAutoBreathing(not autoBreathingEnabled)
            AutoBreathingToggle.Text = autoBreathingEnabled and "Auto Breathing: ON" or "Auto Breathing: OFF"
        end)

        -- Toggle AutoFarm
        local AutoFarmToggle = Instance.new("TextButton")
        AutoFarmToggle.Name = "AutoFarmToggle"
        AutoFarmToggle.Parent = SubMenuFrame
        AutoFarmToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        AutoFarmToggle.Size = UDim2.new(1, -20, 0, 30)
        AutoFarmToggle.Font = Enum.Font.GothamBold
        AutoFarmToggle.Text = autoFarmEnabled and "AutoFarm: ON" or "AutoFarm: OFF"
        AutoFarmToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        AutoFarmToggle.TextSize = 16
        AutoFarmToggle.Position = UDim2.new(0, 10, 0, 90)

        AutoFarmToggle.MouseButton1Click:Connect(function()
            toggleAutoFarm(not autoFarmEnabled)
            AutoFarmToggle.Text = autoFarmEnabled and "AutoFarm: ON" or "AutoFarm: OFF"
        end)

        -- Lista para seleccionar el objetivo de AutoFarm
        local SelectAutoFarm = Instance.new("TextButton")
        SelectAutoFarm.Name = "SelectAutoFarm"
        SelectAutoFarm.Parent = SubMenuFrame
        SelectAutoFarm.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        SelectAutoFarm.Size = UDim2.new(1, -20, 0, 30)
        SelectAutoFarm.Font = Enum.Font.GothamBold
        SelectAutoFarm.Text = currentAutoFarmTarget and ("AutoFarm Target: " .. currentAutoFarmTarget) or "Select AutoFarm Target"
        SelectAutoFarm.TextColor3 = Color3.fromRGB(0, 170, 255)
        SelectAutoFarm.TextSize = 16
        SelectAutoFarm.Position = UDim2.new(0, 10, 0, 130)

        SelectAutoFarm.MouseButton1Click:Connect(function()
            SubMenuFrame:ClearAllChildren()
            local targets = {
                {name = "Generic Demon", func = getNearestDemon},
                {name = "Frosty Demon", func = getNearestFrostyDemon},
                {name = "Green Demon", func = getNearestGreenDemon},
                {name = "Blue Demon", func = getNearestBlueDemon},
                {name = "Generic Slayer", func = getNearestSlayer},
                -- Aquí podrías agregar más NPCs si es necesario
            }

            for i, target in pairs(targets) do
                local TargetButton = Instance.new("TextButton")
                TargetButton.Name = target.name .. "Button"
                TargetButton.Parent = SubMenuFrame
                TargetButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
                TargetButton.Size = UDim2.new(1, -20, 0, 30)
                TargetButton.Font = Enum.Font.GothamBold
                TargetButton.Text = target.name
                TargetButton.TextColor3 = Color3.fromRGB(0, 170, 255)
                TargetButton.TextSize = 16
                TargetButton.Position = UDim2.new(0, 10, 0, 10 + (i - 1) * 40)

                TargetButton.MouseButton1Click:Connect(function()
                    selectedNPCFunc = target.func
                    currentAutoFarmTarget = target.name  -- Guardar y mostrar lo seleccionado
                    SelectAutoFarm.Text = "AutoFarm Target: " .. target.name
                    SubMenuFrame.Visible = false  -- Cierra el submenú
                    toggleAutoFarm(false)  -- No activa el autofarm inmediatamente
                    AutoFarmToggle.Text = "AutoFarm: OFF"  -- Actualiza el texto del botón de toggle
                end)
            end
        end)

        -- Small Hitbox
        local SmallHitboxButton = Instance.new("TextButton")
        SmallHitboxButton.Name = "SmallHitboxButton"
        SmallHitboxButton.Parent = SubMenuFrame
        SmallHitboxButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        SmallHitboxButton.Size = UDim2.new(1, -20, 0, 30)
        SmallHitboxButton.Font = Enum.Font.GothamBold
        SmallHitboxButton.Text = "Small Hitbox"
        SmallHitboxButton.TextColor3 = Color3.fromRGB(0, 170, 255)
        SmallHitboxButton.TextSize = 16
        SmallHitboxButton.Position = UDim2.new(0, 10, 0, 170)

        SmallHitboxButton.MouseButton1Click:Connect(function()
            local player = game:GetService("Players").LocalPlayer
            local character = player.Character

            local resizeParts = {
                character.Torso,
                character["Right Leg"],
                character["Right Arm"],
                character["Left Leg"],
                character["Left Arm"],
                character.HumanoidRootPart,
                character.Head
            }

            local newSize = Vector3.new(1, 2, 0)

            for _, part in ipairs(resizeParts) do
                part.Size = newSize
            end
        end)
    end
end)

-- Botón de teleport
TeleportButton.Name = "TeleportButton"
TeleportButton.Parent = MainFrame
TeleportButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
TeleportButton.Size = UDim2.new(0, 180, 0, 30)
TeleportButton.Position = UDim2.new(0, 210, 0, 60)
TeleportButton.Font = Enum.Font.GothamBold
TeleportButton.Text = "Teleport"
TeleportButton.TextColor3 = Color3.fromRGB(0, 170, 255)
TeleportButton.TextSize = 16

TeleportButton.MouseButton1Click:Connect(function()
    toggleSubMenu(SubMenuFrame)
    if SubMenuFrame.Visible then
        SubMenuFrame:ClearAllChildren()

        -- Lista de teleports
        local TeleportListFrame = Instance.new("ScrollingFrame")
        TeleportListFrame.Name = "TeleportListFrame"
        TeleportListFrame.Parent = SubMenuFrame
        TeleportListFrame.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        TeleportListFrame.Size = UDim2.new(1, -20, 1, -20)
        TeleportListFrame.Position = UDim2.new(0, 10, 0, 10)
        TeleportListFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
        TeleportListFrame.ScrollBarThickness = 6

        local TeleportList = Instance.new("UIListLayout")
        TeleportList.Parent = TeleportListFrame
        TeleportList.SortOrder = Enum.SortOrder.LayoutOrder

        local function addTeleportButton(name, position)
            local TeleportButton = Instance.new("TextButton")
            TeleportButton.Name = name .. "Button"
            TeleportButton.Parent = TeleportListFrame
            TeleportButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
            TeleportButton.Size = UDim2.new(1, 0, 0, 30)
            TeleportButton.Font = Enum.Font.GothamBold
            TeleportButton.Text = name
            TeleportButton.TextColor3 = Color3.fromRGB(0, 170, 255)
            TeleportButton.TextSize = 16

            TeleportButton.MouseButton1Click:Connect(function()
                local player = game:GetService("Players").LocalPlayer
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    character:SetPrimaryPartCFrame(CFrame.new(position))
                    SubMenuFrame.Visible = false  -- Cierra el submenú después de teletransportarse
                end
            end)
        end

        addTeleportButton("Lady Mission", Vector3.new(555.093933, 756.708618, -2386.43018))
        addTeleportButton("Ubuyashiki", Vector3.new(-1962.5155029296875, 874.1123657226562, -6500.1650390625))
        addTeleportButton("Corps Groove", Vector3.new(-3696.42896, 726.615295, -5580.87402))
        addTeleportButton("Slayer Corp", Vector3.new(-1652.82227, 871.53186, -6450.69141))
        addTeleportButton("Kamakura", Vector3.new(-2482.86426, 1161.79785, -1683.6217))
        addTeleportButton("Okuiya", Vector3.new(-3304.74292, 703.954041, -1275.20239))
        addTeleportButton("Coast Forest", Vector3.new(-1474.21838, 744.153259, -767.348267))
        addTeleportButton("Hayakawa Village", Vector3.new(920.434387, 757.866943, -2254.14722))
        addTeleportButton("Demon Camp", Vector3.new(-748.17511, 710.232361, -1526.81128))
        addTeleportButton("Miner TP", workspace.Npcs.Miner.Head.Position)
        addTeleportButton("Gem Merchant", Vector3.new(825.5279541015625, 757.9517822265625, -2248.56298828125))
    end
end)

-- Botón de Hashiras
HashirasButton.Name = "HashirasButton"
HashirasButton.Parent = MainFrame
HashirasButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
HashirasButton.Size = UDim2.new(0, 180, 0, 30)
HashirasButton.Position = UDim2.new(0, 10, 0, 100)
HashirasButton.Font = Enum.Font.GothamBold
HashirasButton.Text = "Hashiras"
HashirasButton.TextColor3 = Color3.fromRGB(0, 170, 255)
HashirasButton.TextSize = 16

HashirasButton.MouseButton1Click:Connect(function()
    toggleSubMenu(SubMenuFrame)
    if SubMenuFrame.Visible then
        SubMenuFrame:ClearAllChildren()

        -- Misiones de Respiración
        local function addMissionButton(name, missionFunction, position)
            local MissionButton = Instance.new("TextButton")
            MissionButton.Name = name .. "MissionButton"
            MissionButton.Parent = SubMenuFrame
            MissionButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
            MissionButton.Size = UDim2.new(1, -20, 0, 30)
            MissionButton.Font = Enum.Font.GothamBold
            MissionButton.Text = name .. " Mission"
            MissionButton.TextColor3 = Color3.fromRGB(0, 170, 255)
            MissionButton.TextSize = 16
            MissionButton.Position = position

            MissionButton.MouseButton1Click:Connect(missionFunction)
        end

        addMissionButton("Water Breathing", function()
            game:GetService("ReplicatedStorage").Remotes.Async:FireServer("WaterFinal", "FinishTest")
        end, UDim2.new(0, 10, 0, 10))

        addMissionButton("Mist Breathing", function()
            _G.toggle = true
            while _G.toggle do
                wait()
                game:GetService("ReplicatedStorage").Remotes.Async:FireServer("MistFinal", "FinishTest")
            end
        end, UDim2.new(0, 10, 0, 50))

        -- Crear lista desplazable para los trainers
        local ScrollFrame = Instance.new("ScrollingFrame")
        ScrollFrame.Name = "HashiraScrollFrame"
        ScrollFrame.Parent = SubMenuFrame
        ScrollFrame.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        ScrollFrame.Size = UDim2.new(1, -20, 0.7, 0)
        ScrollFrame.Position = UDim2.new(0, 10, 0, 100)
        ScrollFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
        ScrollFrame.ScrollBarThickness = 6

        local HashiraList = Instance.new("UIListLayout")
        HashiraList.Parent = ScrollFrame
        HashiraList.SortOrder = Enum.SortOrder.LayoutOrder

        local function addHashiraButton(name, position)
            local HashiraButton = Instance.new("TextButton")
            HashiraButton.Name = name .. "HashiraButton"
            HashiraButton.Parent = ScrollFrame
            HashiraButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
            HashiraButton.Size = UDim2.new(1, 0, 0, 30)
            HashiraButton.Font = Enum.Font.GothamBold
            HashiraButton.Text = name .. " Trainer"
            HashiraButton.TextColor3 = Color3.fromRGB(0, 170, 255)
            HashiraButton.TextSize = 16

            HashiraButton.MouseButton1Click:Connect(function()
                local player = game:GetService("Players").LocalPlayer
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    character:SetPrimaryPartCFrame(CFrame.new(position))
                    SubMenuFrame.Visible = false  -- Cierra el submenú después de teletransportarse
                end
            end)
        end

        addHashiraButton("Water Breathing", Vector3.new(-925.451416, 845.348022, -988.633118))
        addHashiraButton("Love Breathing", Vector3.new(1188.2959, 1077.53308, -1113.44568))
        addHashiraButton("Mist Breathing", Vector3.new(3234.87256, 777.381409, -4047.58716))
        addHashiraButton("Wind Breathing", Vector3.new(-3290.450439453125, 709.4359130859375, -1252.216552734375))
        addHashiraButton("Sound Breathing", Vector3.new(-1261.30664, 871.489014, -6436.3252)) -- Updated position
        addHashiraButton("Flame Breathing", Vector3.new(1493.12585, 1234.70691, -354.60907))
        addHashiraButton("Stone Breathing", Vector3.new(-1705.6731, 1041.3075, -1370.07629))
        addHashiraButton("Beast Breathing", Vector3.new(-3105.6311, 779.770569, -6599.38135))
        addHashiraButton("Thunder Breathing", Vector3.new(-699.014587, 696.349365, 537.918945))
        addHashiraButton("Insect Breathing", Vector3.new(-1641.68445, 908.444336, -6486.81982))
        addHashiraButton("Sun Breathing", Vector3.new(388.676239, 815.934082, -417.083618))
        addHashiraButton("Moon Breathing", Vector3.new(1833.9624, 1116.07288, -5948.55859))
        addHashiraButton("Snake Breathing", Vector3.new(990.340454, 1070.27051, -1136.19946))
    end
end)

-- Botón de Extras
ExtraButton.Name = "ExtraButton"
ExtraButton.Parent = MainFrame
ExtraButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
ExtraButton.Size = UDim2.new(0, 180, 0, 30)
ExtraButton.Position = UDim2.new(0, 210, 0, 100)
ExtraButton.Font = Enum.Font.GothamBold
ExtraButton.Text = "Extra"
ExtraButton.TextColor3 = Color3.fromRGB(0, 170, 255)
ExtraButton.TextSize = 16

ExtraButton.MouseButton1Click:Connect(function()
    toggleSubMenu(SubMenuFrame)
    if SubMenuFrame.Visible then
        SubMenuFrame:ClearAllChildren()

        -- Opciones extras
        local AntiSunToggle = Instance.new("TextButton")
        AntiSunToggle.Name = "AntiSunToggle"
        AntiSunToggle.Parent = SubMenuFrame
        AntiSunToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        AntiSunToggle.Size = UDim2.new(1, -20, 0, 30)
        AntiSunToggle.Font = Enum.Font.GothamBold
        AntiSunToggle.Text = antiSunEnabled and "Anti Sun: ON" or "Anti Sun: OFF"
        AntiSunToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        AntiSunToggle.TextSize = 16
        AntiSunToggle.Position = UDim2.new(0, 10, 0, 10)

        AntiSunToggle.MouseButton1Click:Connect(function()
            toggleAntiSun(not antiSunEnabled)
            AntiSunToggle.Text = antiSunEnabled and "Anti Sun: ON" or "Anti Sun: OFF"
        end)

        local AntiLagToggle = Instance.new("TextButton")
        AntiLagToggle.Name = "AntiLagToggle"
        AntiLagToggle.Parent = SubMenuFrame
        AntiLagToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        AntiLagToggle.Size = UDim2.new(1, -20, 0, 30)
        AntiLagToggle.Font = Enum.Font.GothamBold
        AntiLagToggle.Text = antiLagEnabled and "Anti Lag: ON" or "Anti Lag: OFF"
        AntiLagToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        AntiLagToggle.TextSize = 16
        AntiLagToggle.Position = UDim2.new(0, 10, 0, 50)

        AntiLagToggle.MouseButton1Click:Connect(function()
            toggleAntiLag(not antiLagEnabled)
            AntiLagToggle.Text = antiLagEnabled and "Anti Lag: ON" or "Anti Lag: OFF"
        end)

        local NoCrowToggle = Instance.new("TextButton")
        NoCrowToggle.Name = "NoCrowToggle"
        NoCrowToggle.Parent = SubMenuFrame
        NoCrowToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        NoCrowToggle.Size = UDim2.new(1, -20, 0, 30)
        NoCrowToggle.Font = Enum.Font.GothamBold
        NoCrowToggle.Text = noCrowEnabled and "No Crow: ON" or "No Crow: OFF"
        NoCrowToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        NoCrowToggle.TextSize = 16
        NoCrowToggle.Position = UDim2.new(0, 10, 0, 90)

        NoCrowToggle.MouseButton1Click:Connect(function()
            toggleNoCrow(not noCrowEnabled)
            NoCrowToggle.Text = noCrowEnabled and "No Crow: ON" or "No Crow: OFF"
        end)

        -- Get Drop
        local GetDropToggle = Instance.new("TextButton")
        GetDropToggle.Name = "GetDropToggle"
        GetDropToggle.Parent = SubMenuFrame
        GetDropToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        GetDropToggle.Size = UDim2.new(1, -20, 0, 30)
        GetDropToggle.Font = Enum.Font.GothamBold
        GetDropToggle.Text = getDropEnabled and "Get Drop: ON" or "Get Drop: OFF"
        GetDropToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        GetDropToggle.TextSize = 16
        GetDropToggle.Position = UDim2.new(0, 10, 0, 130)

        GetDropToggle.MouseButton1Click:Connect(function()
            toggleGetDrop(not getDropEnabled)
            GetDropToggle.Text = getDropEnabled and "Get Drop: ON" or "Get Drop: OFF"
            if getDropEnabled then
                pickupDrop()
            end
        end)

        -- Auto Gourd
        local AutoGourdToggle = Instance.new("TextButton")
        AutoGourdToggle.Name = "AutoGourdToggle"
        AutoGourdToggle.Parent = SubMenuFrame
        AutoGourdToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        AutoGourdToggle.Size = UDim2.new(1, -20, 0, 30)
        AutoGourdToggle.Font = Enum.Font.GothamBold
        AutoGourdToggle.Text = autoGourdEnabled and "Auto Gourd: ON" or "Auto Gourd: OFF"
        AutoGourdToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        AutoGourdToggle.TextSize = 16
        AutoGourdToggle.Position = UDim2.new(0, 10, 0, 170)

        AutoGourdToggle.MouseButton1Click:Connect(function()
            toggleAutoGourd(not autoGourdEnabled)
            AutoGourdToggle.Text = autoGourdEnabled and "Auto Gourd: ON" or "Auto Gourd: OFF"
        end)

        -- Rejoin
        local RejoinButton = Instance.new("TextButton")
        RejoinButton.Name = "RejoinButton"
        RejoinButton.Parent = SubMenuFrame
        RejoinButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        RejoinButton.Size = UDim2.new(1, -20, 0, 30)
        RejoinButton.Font = Enum.Font.GothamBold
        RejoinButton.Text = "Rejoin"
        RejoinButton.TextColor3 = Color3.fromRGB(0, 170, 255)
        RejoinButton.TextSize = 16
        RejoinButton.Position = UDim2.new(0, 10, 0, 410)  -- Move to the end

        RejoinButton.MouseButton1Click:Connect(function()
            rejoinGame()
        end)

        -- ServerHop
        local ServerHopButton = Instance.new("TextButton")
        ServerHopButton.Name = "ServerHopButton"
        ServerHopButton.Parent = SubMenuFrame
        ServerHopButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        ServerHopButton.Size = UDim2.new(1, -20, 0, 30)
        ServerHopButton.Font = Enum.Font.GothamBold
        ServerHopButton.Text = "ServerHop"
        ServerHopButton.TextColor3 = Color3.fromRGB(0, 170, 255)
        ServerHopButton.TextSize = 16
        ServerHopButton.Position = UDim2.new(0, 10, 0, 450)  -- Move to the end

        ServerHopButton.MouseButton1Click:Connect(function()
            serverHop()
        end)

        -- Farm Trinkets
        local FarmTrinketsToggle = Instance.new("TextButton")
        FarmTrinketsToggle.Name = "FarmTrinketsToggle"
        FarmTrinketsToggle.Parent = SubMenuFrame
        FarmTrinketsToggle.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        FarmTrinketsToggle.Size = UDim2.new(1, -20, 0, 30)
        FarmTrinketsToggle.Font = Enum.Font.GothamBold
        FarmTrinketsToggle.Text = autoTrinketEnabled and "Farm Trinkets: ON" or "Farm Trinkets: OFF"
        FarmTrinketsToggle.TextColor3 = Color3.fromRGB(0, 170, 255)
        FarmTrinketsToggle.TextSize = 16
        FarmTrinketsToggle.Position = UDim2.new(0, 10, 0, 210)

        FarmTrinketsToggle.MouseButton1Click:Connect(function()
            toggleFarmTrinkets(not autoTrinketEnabled)
            FarmTrinketsToggle.Text = autoTrinketEnabled and "Farm Trinkets: ON" or "Farm Trinkets: OFF"
        end)

        -- Clear Fog
        local ClearFogButton = Instance.new("TextButton")
        ClearFogButton.Name = "ClearFogButton"
        ClearFogButton.Parent = SubMenuFrame
        ClearFogButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        ClearFogButton.Size = UDim2.new(1, -20, 0, 30)
        ClearFogButton.Font = Enum.Font.GothamBold
        ClearFogButton.Text = "Clear Fog"
        ClearFogButton.TextColor3 = Color3.fromRGB(0, 170, 255)
        ClearFogButton.TextSize = 16
        ClearFogButton.Position = UDim2.new(0, 10, 0, 250)

        ClearFogButton.MouseButton1Click:Connect(function()
            game.Lighting.Atmosphere:Destroy()
            game.Lighting.DepthOfField:Destroy()
            game.Lighting.FogStart = 1e20
            game.Lighting.FogEnd = 1e20
        end)

        -- Delete Trees
        local DeleteTreesButton = Instance.new("TextButton")
        DeleteTreesButton.Name = "DeleteTreesButton"
        DeleteTreesButton.Parent = SubMenuFrame
        DeleteTreesButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        DeleteTreesButton.Size = UDim2.new(1, -20, 0, 30)
        DeleteTreesButton.Font = Enum.Font.GothamBold
        DeleteTreesButton.Text = "Delete Trees"
        DeleteTreesButton.TextColor3 = Color3.fromRGB(0, 170, 255)
        DeleteTreesButton.TextSize = 16
        DeleteTreesButton.Position = UDim2.new(0, 10, 0, 290)

        DeleteTreesButton.MouseButton1Click:Connect(function()
            game:GetService("Workspace").Map.TreeMap:Destroy()
        end)

        -- ESP Players
        local ESPPlayersButton = Instance.new("TextButton")
        ESPPlayersButton.Name = "ESPPlayersButton"
        ESPPlayersButton.Parent = SubMenuFrame
        ESPPlayersButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        ESPPlayersButton.Size = UDim2.new(1, -20, 0, 30)
        ESPPlayersButton.Font = Enum.Font.GothamBold
        ESPPlayersButton.Text = "ESP Players"
        ESPPlayersButton.TextColor3 = Color3.fromRGB(0, 170, 255)
        ESPPlayersButton.TextSize = 16
        ESPPlayersButton.Position = UDim2.new(0, 10, 0, 330)

        ESPPlayersButton.MouseButton1Click:Connect(function()
            local gui = Instance.new("ScreenGui",game.CoreGui)
            local vp = Instance.new("ViewportFrame",gui)
            vp.CurrentCamera = workspace.CurrentCamera
            vp.Position = UDim2.new(0,0,0,-35)
            vp.Size = UDim2.new(1,0,1,35)
            vp.BackgroundTransparency = 1
            local replicatelist = {} --part=partclone
            local clonelist = {} --char=clone
            local function addplayer(plr)
                if plr ~= game.Players.LocalPlayer then
                    repeat wait() until plr.Character ~= nil
                    local char = plr.Character
                    char.Archivable = true
                    local clone = char:Clone()
                    clonelist[plr] = clone
                    char.Archivable = false
                    clone.Parent = vp
                    clone.Name = ""
                    for i,v in pairs(char:GetChildren()) do
                        if v:IsA("BasePart") then
                            replicatelist[v] = clone[v.Name]
                        elseif v.ClassName == "Humanoid" then 
                            replicatelist[v] = clone[v.Name]
                        end
                    end
                end
            end

            local function removeplayer(plr)
                for i,v in pairs(plr:GetChildren()) do
                    if replicatelist[v] then replicatelist[v] = nil end
                end
                if clonelist[plr] then
                    clonelist[plr]:Destroy()
                end
            end
            local function initplayer(plr)
                addplayer(plr)
                plr.CharacterAdded:Connect(function(char)
                    addplayer(plr)
                end)
                plr.CharacterRemoving:Connect(function(char)
                    removeplayer(plr)
                end)
            end
            for i,v in pairs(game.Players:GetPlayers()) do
                initplayer(v)
            end
            game.Players.PlayerAdded:Connect(initplayer)
            game:GetService("RunService").RenderStepped:Connect(function()
                for orig,clone in pairs(replicatelist) do
                    if orig ~= nil and clone ~= nil then
                        if orig:IsA("BasePart") then
                            pcall(function() clone.CFrame = orig.CFrame end)
                        else
                            pcall(function() clone.Health = orig.Health; clone.MaxHealth = orig.MaxHealth end)
                        end
                    end
                end
            end)
        end)

        -- TP to Epic
        local TPEpicButton = Instance.new("TextButton")
        TPEpicButton.Name = "TPEpicButton"
        TPEpicButton.Parent = SubMenuFrame
        TPEpicButton.BackgroundColor3 = Color3.fromRGB(43, 42, 49)
        TPEpicButton.Size = UDim2.new(1, -20, 0, 30)
        TPEpicButton.Font = Enum.Font.GothamBold
        TPEpicButton.Text = "TP to Epic"
        TPEpicButton.TextColor3 = Color3.fromRGB(0, 170, 255)
        TPEpicButton.TextSize = 16
        TPEpicButton.Position = UDim2.new(0, 10, 0, 370)

        TPEpicButton.MouseButton1Click:Connect(function()
            local player = game:GetService("Players").LocalPlayer
            local character = player.Character

            local zone = workspace.Trinkets.EpicSpawn
            -- Teleport the character to the zone
            character:SetPrimaryPartCFrame(zone.CFrame)
        end)
    end
end)

-- Botón de minimización
ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = MainFrame
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
ToggleButton.Size = UDim2.new(0, 20, 0, 20)
ToggleButton.Position = UDim2.new(1, -30, 0, 15)
ToggleButton.Text = "-"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 16

ToggleButton.MouseButton1Click:Connect(function()
    uiMinimized = not uiMinimized
    if uiMinimized then
        MainFrame.Size = UDim2.new(0, 400, 0, 50)
        CombatButton.Visible = false
        TeleportButton.Visible = false
        HashirasButton.Visible = false
        ExtraButton.Visible = false
        DupeButton.Visible = false
        SubMenuFrame.Visible = false
        DupeMenu.Visible = false
    else
        MainFrame.Size = UDim2.new(0, 400, 0, 200)
        CombatButton.Visible = true
        TeleportButton.Visible = true
        HashirasButton.Visible = true
        ExtraButton.Visible = true
        DupeButton.Visible = true
    end
end)

-- Salto Infinito
game:GetService("UserInputService").JumpRequest:Connect(function()
    if game:GetService("Players").LocalPlayer.Character then
        game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end
end)

-- Función para ocultar o mostrar la UI con Shift derecho
local function hideUI()
    ScreenGui.Enabled = not ScreenGui.Enabled
end

game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.RightShift then
        hideUI()
    end
end)

-- Cargar configuraciones al inicio
loadSettings()

-- Verificar y activar funciones según el estado guardado
if godmodeEnabled then
    toggleGodmode(true)
end

if autoBreathingEnabled then
    toggleAutoBreathing(true)
end

if antiLagEnabled then
    toggleAntiLag(true)
end

if noCrowEnabled then
    toggleNoCrow(true)
end

if getDropEnabled then
    toggleGetDrop(true)
end

if autoGourdEnabled then
    toggleAutoGourd(true)
end

if antiSunEnabled then
    toggleAntiSun(true)
end

if autoFarmEnabled then
    toggleAutoFarm(true)
end

if autoTrinketEnabled then
    toggleFarmTrinkets(true)
end
